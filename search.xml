<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Java日志框架</title>
      <link href="/log/java-log-2/"/>
      <url>/log/java-log-2/</url>
      
        <content type="html"><![CDATA[<h1 id="一、Java日志框架"><a href="#一、Java日志框架" class="headerlink" title="一、Java日志框架"></a>一、Java日志框架</h1><p><strong>日志框架的作用</strong></p><blockquote><ol><li>控制日志输出的内容和格式。</li><li>控制日志输出的位置。</li><li>日志文件文件相关的优化，如异步操作、归档、压缩..</li><li>日志系统的维护</li><li>面向接口开发-日志的门面(slf4j)</li></ol></blockquote><p><strong>为什么使用日志框架？</strong></p><p>软件系统发展到今天已经很复杂了，特别是服务器端软件，涉及到的知识，内容，问题太多。在某些方面使用别人成熟的框架，就相当于让别人帮你完成一些基础工作，你只需要集中精力完成系统的业务逻辑设计。而且框架一般是成熟，稳健的，他可以处理系统很多细节问题，比如，事务处理，安全性，数据流控制等问题。</p><h2 id="1-Slf4j"><a href="#1-Slf4j" class="headerlink" title="1.Slf4j"></a>1.Slf4j</h2><h3 id="1-1-门面模式-23种设计模式"><a href="#1-1-门面模式-23种设计模式" class="headerlink" title="1.1 门面模式(23种设计模式)"></a>1.1 <strong>门面模式(23种设计模式)</strong></h3><blockquote><p>门面模式，其核心为<strong>外部与一个子系统的通信必须通过一个统一的外观对象进行，使得子系统更易于使用</strong>。</p></blockquote><p>门面模式的核心为Facade即门面对象，门面对象核心为几个点：</p><ul><li>知道所有子角色的功能和责任</li><li>将客户端发来的请求委派到子系统中，没有实际业务逻辑</li><li>不参与子系统内业务逻辑的实现</li></ul><p>Slf4j是典型的门面模式</p><p><strong>Slf4j只是一个日志标准，并不是日志系统的具体实现</strong>。理解这句话非常重要，Slf4j只做两件事情：</p><ul><li>提供日志接口</li><li>提供获取具体日志对象的方法</li></ul><h3 id="1-2-SLF4j使用"><a href="#1-2-SLF4j使用" class="headerlink" title="1.2 SLF4j使用"></a>1.2 SLF4j使用</h3><p>官方网站：<a href="https://www.slf4j.org/">https://www.slf4j.org/</a> </p><blockquote><p>简单日志门面(Simple Logging Facade For Java) SLF4J主要是为了给Java日志访问提供一套标准、规范的API框架，其主要意义在于提供接口，具体的实现可以交由其他日志框架，例如log4j和logback等。 当然slf4j自己也提供了功能较为简单的实现，但是一般很少用到。对于一般的Java项目而言，日志框架会选择slf4j-api作为门面，配上具体的实现框架（log4j、logback等），中间使用桥接器完成桥接。 </p></blockquote><p>在<code>pom.xml</code>中添加依赖</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!--slf4j core 使用slf4j必須添加--></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.slf4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>slf4j-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.7.27<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>      <span class="token comment">&lt;!--slf4j 自带的简单日志实现 --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.slf4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>slf4j-simple<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.7.27<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>      <span class="token comment">&lt;!--单元测试--></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>编写测试类</strong></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Slf4jTest</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 声明日志对象</span>    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">static</span> <span class="token class-name">Logger</span> LOGGER <span class="token operator">=</span> <span class="token class-name">LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">Slf4jTest</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testLog</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 打印日志信息</span>        LOGGER<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"error"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        LOGGER<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">"warn"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        LOGGER<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"info"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        LOGGER<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">"debug"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        LOGGER<span class="token punctuation">.</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token string">"trace"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 使用占位符输出日志信息</span>        <span class="token class-name">String</span> name <span class="token operator">=</span> <span class="token string">"jack"</span><span class="token punctuation">;</span>        <span class="token class-name">Integer</span> age <span class="token operator">=</span> <span class="token number">18</span><span class="token punctuation">;</span>        LOGGER<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"用户：&#123;&#125;,&#123;&#125;"</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 将系统异常信息写入日志</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            LOGGER<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"出现异常："</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-3-绑定日志的实现（Binding）"><a href="#1-3-绑定日志的实现（Binding）" class="headerlink" title="1.3 绑定日志的实现（Binding）"></a>1.3 绑定日志的实现（Binding）</h3><p>SLF4J支持各种日志框架。SLF4J发行版附带了几个称为<code>SLF4J绑定</code>的jar文件，每个绑定对应一个受支持的框架。 </p><p><strong>使用slf4j的日志绑定流程：</strong></p><ol><li><p>添加slf4j-api的依赖 </p></li><li><p>使用slf4j的API在项目中进行统一的日志记录 </p></li><li><p>绑定具体的日志实现框架 </p><blockquote><p>绑定已经实现了slf4j的日志框架,直接添加对应依赖</p><p>绑定没有实现slf4j的日志框架,先添加日志的适配器,再添加实现类的依赖</p></blockquote></li><li><p>slf4j有且仅有一个日志实现框架的绑定（如果出现多个默认使用第一个依赖日志实现） </p></li></ol><p>通过maven引入常见的日志实现框架：</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!--slf4j core 使用slf4j必須添加--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.slf4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>slf4j-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.7.27<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- log4j--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.slf4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>slf4j-log4j12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.7.27<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>log4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>log4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.2.17<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- jul --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.slf4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>slf4j-jdk14<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.7.27<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!--jcl --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.slf4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>slf4j-jcl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.7.27<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- nop --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.slf4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>slf4j-nop<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.7.27<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>要切换日志框架，只需替换类路径上的slf4j绑定。例如，要从java.util.logging切换到log4j，只需将slf4j-jdk14-1.7.27.jar替换为slf4j-log4j12-1.7.27.jar即可。 </p><p>SLF4J不依赖于任何特殊的类装载。实际上，每个SLF4J绑定在编译时都是硬连线的，以使用一个且只有 </p><p>一个特定的日志记录框架。例如，slf4j-log4j12-1.7.27.jar绑定在编译时绑定以使用log4j。在您的代码 </p><p>中，除了<em>slf4j-api-1.7.27.jar</em>之外，您只需将您选择的<strong>一个且只有一个</strong>绑定放到相应的类路径位置。不要 </p><p>在类路径上放置多个绑定。以下是一般概念的图解说明。 </p><p><a href="https://www.slf4j.org/images/concrete-bindings.png">https://www.slf4j.org/images/concrete-bindings.png</a></p><h3 id="1-4-桥接旧的日志框架（Bridging）"><a href="#1-4-桥接旧的日志框架（Bridging）" class="headerlink" title="1.4 桥接旧的日志框架（Bridging）"></a>1.4 桥接旧的日志框架（Bridging）</h3><p>通常，您依赖的某些组件依赖于SLF4J以外的日志记录API。您也可以假设这些组件在不久的将来不会切 </p><p>换到SLF4J。为了解决这种情况，SLF4J附带了几个桥接模块，这些模块将对log4j，JCL和 </p><p>java.util.logging API的调用重定向，就好像它们是对SLF4J API一样。 </p><p>桥接解决的是项目中日志的遗留问题，当系统中存在之前的日志API，可以通过桥接转换到slf4j的实现 </p><ol><li><p>先去除之前老的日志框架的依赖 </p></li><li><p>添加SLF4J提供的桥接组件 </p></li><li><p>为项目添加SLF4J的具体实现 </p></li></ol><p><strong>迁移的方式：</strong> </p><p>如果我们要使用SLF4J的桥接器，替换原有的日志框架，那么我们需要做的第一件事情，就是删除掉原 </p><p>有项目中的日志框架的依赖。然后替换成SLF4J提供的桥接器。 </p><h2 id="2-Log4j2"><a href="#2-Log4j2" class="headerlink" title="2. Log4j2"></a>2. Log4j2</h2><p>Apache Log4j 2是对Log4j的升级版，参考了logback的一些优秀的设计，并且修复了一些问题，因此带 来了一些重大的提升，主要有： </p><p><code>异常处理</code>，在logback中，Appender中的异常不会被应用感知到，但是在log4j2中，提供了一些异 常处理机制。 </p><p><code>性能提升</code>， log4j2相较于log4j 和logback都具有很明显的性能提升，后面会有官方测试的数据。 </p><p><code>自动重载配置</code>，参考了logback的设计，当然会提供自动刷新参数配置，最实用的就是我们在生产上可以动态的修改日志的级别而不需要重启应用。 </p><p><code>无垃圾机制</code>，log4j2在大部分情况下，都可以使用其设计的一套无垃圾机制，避免频繁的日志收集导致的jvm gc。 </p><p>官网： <a href="https://logging.apache.org/log4j/2.x/">https://logging.apache.org/log4j/2.x/</a> </p><blockquote><p>SpringBoot使用<code>Log4j2</code>：</p><ol><li>SpringBoot默认集成的是logback，所以使用Log4j2需要先排除spring-boot-starter-logging</li><li>Log4j2需要使用异步记录日志（18倍性能的由来）</li></ol></blockquote><p><strong>记录日志可以分为三个步骤</strong></p><ol><li>在系统中采集原始日志信息</li><li>对采集好的日志信息进行格式化等处理</li><li>将格式化好的日志信息写入我们定义的目的地(数据库，文件，控制台)</li></ol><p><strong>Log4j2有三个重要组件</strong>，可以对应上文的三个步骤</p><ol><li><code>Logger</code>：在程序中对原始日志信息进行采集</li><li><code>Layout</code> ：对采集下来的日志信息进行格式化</li><li><code>Appender</code>：将格式化好的日志信息写入目的地</li></ol><h3 id="1-1-集成Log4j2"><a href="#1-1-集成Log4j2" class="headerlink" title="1.1 集成Log4j2"></a>1.1 集成Log4j2</h3><p>在Maven父工程中添加对应的依赖管理</p><p><strong>注意：这里必须要加版本号</strong></p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.5.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">></span></span>                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">></span></span>                     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-logging<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.5.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">></span></span>                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">></span></span>                     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-logging<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--异步日志依赖 --></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.lmax<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>disruptor<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>3.3.4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>由于common每个模块都需要导入，在common中添加log4j2的依赖：</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-log4j2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span> <span class="token comment">&lt;!--异步日志依赖 --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.lmax<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>disruptor<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-2-添加-log4j2-xml-配置文件"><a href="#1-2-添加-log4j2-xml-配置文件" class="headerlink" title="1.2 添加 log4j2.xml 配置文件"></a><strong>1.2 添加 log4j2.xml 配置文件</strong></h3><blockquote><p>添加配置文件到<code>resource</code>文件夹下</p></blockquote><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8" ?></span><span class="token comment">&lt;!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL    status="warn" 日志框架本身的输出日志级别，可以修改为debug    monitorInterval="5" 自动加载配置文件的间隔时间，不低于 5秒；生产环境中修改配置文件，是热更新，无需重启应用 --></span><span class="token comment">&lt;!--自定义命名格式：%d：发生时间，%d&#123;yyyy-MM-dd HH:mm:ss,SSS&#125;，输出类似：2020-02-20 22:10:28,921%F：输出所在的类文件名%t：线程名称%p：日志级别%c：日志消息所在类名%m：消息内容%M：输出所在函数名%x: 输出和当前线程相关联的NDC(嵌套诊断环境),尤其用到像java servlets这样的多客户多线程的应用中。%l：执行的函数名(类名称:行号）com.core.LogHelper.aroundService(LogHelper.java:32)%n：换行%i：从1开始自增数字%-5level：输出日志级别，-5表示左对齐并且固定输出5个字符，如果不足在右边补0--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span> <span class="token attr-name">status</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>WARN<span class="token punctuation">"</span></span> <span class="token attr-name">monitorInterval</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--        集中配置属性进行管理        使用时通过:$&#123;name&#125;    --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>LOG_HOME<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>D:/logs/xt<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>PATTERN<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>%d %highlight&#123;%-5level&#125;&#123;ERROR=Bright RED, WARN=Bright Yellow, INFO=Bright Green, DEBUG=Bright Cyan, TRACE=Bright White&#125; %style&#123;[%t]&#125;&#123;bright,magenta&#125; %style&#123;%c&#123;1.&#125;.%M(%L)&#125;&#123;cyan&#125;: %msg%n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>FILE_PATTERN<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>%d %-5level [%t] %c&#123;1.&#125;.%M(%L): %m%n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>property</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 日志处理 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Appenders</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- 控制台输出 appender，SYSTEM_OUT输出黑色，SYSTEM_ERR输出红色 在vm配置-Dlog4j.skipJansi=false可开启彩色日志--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Console</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Console<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>SYSTEM_OUT<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token comment">&lt;!-- 设置控制台只输出INFO及以上级别的信息(onMatch),其他的直接拒绝(onMismatch) --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ThresholdFilter</span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>INFO<span class="token punctuation">"</span></span> <span class="token attr-name">onMatch</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ACCEPT<span class="token punctuation">"</span></span> <span class="token attr-name">onMismatch</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>DENY<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PatternLayout</span> <span class="token attr-name">pattern</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;PATTERN&#125;<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Console</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- 日志文件输出 appender 所有的日志信息会打印到此文件中，append=false每次启动程序会自动清空 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>File</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">fileName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;LOG_HOME&#125;/xt.log<span class="token punctuation">"</span></span> <span class="token attr-name">append</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token comment">&lt;!-- 设置控制台只输出INFO及以上级别的信息(onMatch),其他的直接拒绝(onMismatch) --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ThresholdFilter</span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>INFO<span class="token punctuation">"</span></span> <span class="token attr-name">onMatch</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ACCEPT<span class="token punctuation">"</span></span> <span class="token attr-name">onMismatch</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>DENY<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PatternLayout</span> <span class="token attr-name">pattern</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;FILE_PATTERN&#125;<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>File</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Async</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Async<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AppenderRef</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Async</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- 日志文件输出 appender 业务日志 一般打印domain中的日志 --></span>        <span class="token comment">&lt;!--RollingFile 滚动文件，达到指定条件 生成新的文件进行记录--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>RollingFile</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>error<span class="token punctuation">"</span></span> <span class="token attr-name">fileName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;LOG_HOME&#125;/error/error.log<span class="token punctuation">"</span></span> <span class="token attr-name">filePattern</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;LOG_HOME&#125;/error/error_%d&#123;yyyy-MM-dd&#125;.log<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>PatternLayout</span> <span class="token attr-name">pattern</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>$&#123;FILE_PATTERN&#125;<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Filters</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ThresholdFilter</span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ERROR<span class="token punctuation">"</span></span> <span class="token attr-name">onMatch</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ACCEPT<span class="token punctuation">"</span></span> <span class="token attr-name">onMismatch</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>DENY<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Filters</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Policies</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TimeBasedTriggeringPolicy</span><span class="token punctuation">/></span></span>                <span class="token comment">&lt;!-- 按大小划分 --></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SizeBasedTriggeringPolicy</span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100MB<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Policies</span><span class="token punctuation">></span></span>            <span class="token comment">&lt;!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件，超过该数量，会滚动删除前面的记录 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DefaultRolloverStrategy</span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>24<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>RollingFile</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Async</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Async-Error<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AppenderRef</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>error<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Async</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Appenders</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- logger 定义 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Loggers</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- 自定义 logger 对象            includeLocation="false" 关闭日志记录的行号信息，开启的话会严重影响异步输出的性能            additivity="false" 不再继承 rootlogger对象         --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AsyncLogger</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>com.gxuwz.test.log.Log4j2Test<span class="token punctuation">"</span></span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>INFO<span class="token punctuation">"</span></span> <span class="token attr-name">includeLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">additivity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token comment">&lt;!-- 指定日志使用的处理器 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AppenderRef</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Async<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AppenderRef</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Console<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AppenderRef</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Async-Error<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>AsyncLogger</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- 使用 rootLogger 配置 日志级别 level="trace" --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Root</span> <span class="token attr-name">level</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>trace<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token comment">&lt;!-- 指定日志使用的处理器 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AppenderRef</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Console<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token comment">&lt;!-- 使用异步 appender --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AppenderRef</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Async<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>AppenderRef</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Async-Error<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Root</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Loggers</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>在测试包下新建一个测试类</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Log4j2Test</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/**     * Logger 在具体使用中需要声明一个 Logger 对象，官方推荐将 Logger 声明为一个静态变量，可以提高日志记录的性能     */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Logger</span> logger <span class="token operator">=</span> <span class="token class-name">LogManager</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">Log4j2Test</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        logger<span class="token punctuation">.</span><span class="token function">fatal</span><span class="token punctuation">(</span><span class="token string">"Log4j2 fatal level"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"Log4j2 error level"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        logger<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span><span class="token string">"Log4j2 warn level"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        logger<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"Log4j2 info level"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">"Log4j2 debug level"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        logger<span class="token punctuation">.</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token string">"Log4j2 trace level"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行后可以在控制台看到输出情况，也可以在配置文件定义的存放目录看到日志。</p><h2 id="3-LogBack"><a href="#3-LogBack" class="headerlink" title="3.LogBack"></a>3.LogBack</h2><p><code>Todo...</code></p>]]></content>
      
      
      <categories>
          
          <category> Log </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Log4j2 </tag>
            
            <tag> Logback </tag>
            
            <tag> SLF4j </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java日志体系</title>
      <link href="/log/java-log/"/>
      <url>/log/java-log/</url>
      
        <content type="html"><![CDATA[<h1 id="一、Java日志"><a href="#一、Java日志" class="headerlink" title="一、Java日志"></a>一、Java日志</h1><blockquote><p>在应用当中，我们少不了要记录日志，记录日志的目的有两个：</p><ol><li>用于线上错误排查 </li><li>分析日志（埋点日志）</li></ol></blockquote><p><strong>日志文件是用于记录系统操作事件的文件集合</strong>，可分为事件日志和消息日志。具有处理历史数据、诊断问题的追踪以及理解系统的活动等重要作用。 </p><h2 id="1-1-调试日志"><a href="#1-1-调试日志" class="headerlink" title="1.1 调试日志"></a>1.1 调试日志</h2><p>软件开发中，我们经常需要去调试程序，做一些信息，状态的输出便于我们查询程序的运行状况。为了让我们能够更加灵活和方便的控制这些调试的信息，所有我们需要专业的日志技术。java中寻找bug需要重现。调试也就是debug 可以在程序运行中暂停程序运行，可以查看程序在运行中的情况。日志主要是为了更方便的去重现问题。 </p><h2 id="1-2-系统日志"><a href="#1-2-系统日志" class="headerlink" title="1.2 系统日志"></a><strong>1.2</strong> <strong>系统日志</strong></h2><p>系统日志是记录系统中硬件、软件和系统问题的信息，同时还可以监视系统中发生的事件。用户可以通过它来检查错误发生的原因，或者寻找受到攻击时攻击者留下的痕迹。系统日志包括系统日志、应用程序日志和安全日志。</p><h1 id="二、日志发展史"><a href="#二、日志发展史" class="headerlink" title="二、日志发展史"></a>二、日志发展史</h1><h2 id="1-阶段一"><a href="#1-阶段一" class="headerlink" title="1. 阶段一"></a>1. 阶段一</h2><blockquote><p>2001年以前，Java是没有日志库的，打印日志全凭<code>System.out</code>和<code>System.err</code></p></blockquote><p>缺点：</p><ol><li><strong>产生大量的IO操作  同时在生产环境中 无法合理的控制是否需要输出</strong></li><li><strong>输出的内容不能保存到文件</strong></li><li><strong>只打印在控制台，打印完就过去了，也就是说除非你一直盯着程序跑</strong></li><li><strong>无法定制化，且日志粒度不够细</strong></li></ol><h2 id="2-阶段二"><a href="#2-阶段二" class="headerlink" title="2. 阶段二"></a>2. 阶段二</h2><blockquote><p>2001年，一个叫<code>Ceki Gülcü</code>的大佬搞了一个日志库<code>log4j</code>，后来<code>Log4j</code>成为<code>Apache</code>项目，<code>Ceki</code>也加入<code>Apache</code>组织</p></blockquote><p><code>Apache</code>还曾经建议<code>Sun</code>引入<code>Log4j</code>到<code>Java</code>的标准库中，但<code>Sun</code>拒绝了</p><h2 id="3-阶段三"><a href="#3-阶段三" class="headerlink" title="3. 阶段三"></a>3. 阶段三</h2><blockquote><p><code>Sun</code>有自己的小心思，<code>2002</code>年<code>2</code>月<code>JDK1.4</code>发布，<code>Sun</code>推出了自己的日志标准库<code>JUL（Java Util Logging）</code>，其实是照着<code>Log4j</code>抄的，而且还没抄好，还是在<code>JDK1.5</code>以后性能和可用性才有所提升。</p></blockquote><p>由于Log4j比JUL好用，并且成熟，所以<code>Log4j</code>在选择上占据了一定的优势。</p><h2 id="4-阶段四"><a href="#4-阶段四" class="headerlink" title="4. 阶段四"></a>4. 阶段四</h2><blockquote><p><code>2002</code>年<code>8</code>月<code>Apache</code>推出了<code>JCL（Jakarta Commons Logging）</code>，也就是日志抽象层，支持运行时动态加载日志组件的实现，当然也提供一个默认实现<code>Simple Log</code>（<strong>在<code>ClassLoader</code>中进行查找，如果能找到<code>Log4j</code>则默认使用<code>log4j</code>实现，如果没有则使用<code>JUL</code> 实现，再没有则使用JCL内部提供的<code>Simple Log</code>实现</strong>）。</p></blockquote><p><img src="https://blog-1306562150.cos.ap-guangzhou.myqcloud.com/Log/image-20211012133214379.png" alt="image-20211012133214379"></p><p>但是<code>JCL</code>有三个缺点：</p><ol><li><strong>效率较低</strong></li><li><strong>容易引发混乱</strong></li><li><strong>使用了自定义ClassLoader的程序中，使用JCL会引发内存泄露</strong></li></ol><h2 id="5-阶段五"><a href="#5-阶段五" class="headerlink" title="5. 阶段五"></a>5. 阶段五</h2><blockquote><p><code>2006</code>年<code>Ceki</code>（<code>Log4j</code>的作者）因为一些原因离开了<code>Apache</code>组织，之后<code>Ceki</code>觉得<code>JCL</code>不好用，自己撸了一套新的日志标准接口规范<code>Slf4j（Simple Logging Facade for Java）</code>，也可以称为日志门面，很明显<code>Slf4j</code>是对标<code>JCL</code>，后面也证明了<code>Slf4j</code>比<code>JCL</code>更优秀。</p></blockquote><p><code>Ceki</code>提供了一系列的桥接包来帮助<code>Slf4j</code>接口与其他日志库建立关系，这种方式称为桥接设计模式。</p><p>代码使用<code>Slf4j</code>接口，就可以实现日志的统一标准化，后续如果想要更换日志实现，只需要引入<code>Slf4j</code>与相关的桥接包，再引入具体的日志标准库即可。</p><h2 id="6-阶段六"><a href="#6-阶段六" class="headerlink" title="6. 阶段六"></a>6. 阶段六</h2><blockquote><p><code>Ceki</code>觉得市场上的日志标准库都是间接实现<code>Slf4j</code>接口，也就是说每次都需要配合桥接包，因此在<code>2006</code>年，<code>Ceki</code>巨佬基于<code>Slf4j</code>接口撸出了<code>Logback</code>日志标准库，做为<code>Slf4j</code>接口的默认实现，<code>Logback</code>也十分给力，在功能完整度和性能上超越了所有已有的日志标准库。</p></blockquote><p><strong>根本原因还在于，随着用户体量的提升，Log4j无法满足高性能的要求，成为应用的性能瓶颈</strong></p><p>目前<code>Java</code>日志体系关系图如下</p><p><img src="https://blog-1306562150.cos.ap-guangzhou.myqcloud.com/Log/image-20211012135029284.png" alt="image-20211012135029284"></p><h2 id="7-阶段七"><a href="#7-阶段七" class="headerlink" title="7. 阶段七"></a>7. 阶段七</h2><blockquote><p><code>2012</code>年，<code>Apache</code>直接推出新项目<code>Log4j2</code>（不兼容<code>Log4j</code>），<code>Log4j2</code>全面借鉴<code>Slf4j+Logback</code>。</p></blockquote><p><code>Log4j2</code>不仅仅具有<code>Logback</code>的所有特性，还做了分离设计，分为<code>log4j-api</code>和<code>log4j-core</code>，<code>log4j-api</code>是日志接口，<code>log4j-core</code>是日志标准库，并且<code>Apache</code>也为<code>Log4j2</code>提供了各种桥接包。</p><p><img src="https://blog-1306562150.cos.ap-guangzhou.myqcloud.com/Log/image-20211012135415814.png" alt="image-20211012135415814"></p><blockquote><p>虽然Log4j2有明显的抄袭嫌疑，但是毕竟是最新的日志库，汲取了logback优秀设计的同时，还解决了一些问题，性能有了极大的提升，官方测试是18倍。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Log </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Log4j2 </tag>
            
            <tag> Logback </tag>
            
            <tag> Log4j </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>项目启动问题</title>
      <link href="/bugs/bug20211117/"/>
      <url>/bugs/bug20211117/</url>
      
        <content type="html"><![CDATA[<h2 id="项目启动问题"><a href="#项目启动问题" class="headerlink" title="项目启动问题"></a>项目启动问题</h2><p>运行环境：Tomcat7.0.57、Idea2019、Gradle4.7</p><p>项目正常debug启动，修改一些业务代码后重启Tomcat，无法debug启动，但是可以直接点击run按钮启动项目。</p><p><img src="https://blog-1306562150.cos.ap-guangzhou.myqcloud.com/problem/tomcat.jpg"></p><p><strong>IDEA Event Log</strong></p><pre class="line-numbers language-none"><code class="language-none">Application Server was not connected before run configuration stop, reason: Unable to ping server at localhost:1099<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>控制台输出</strong></p><pre class="line-numbers language-none"><code class="language-none">Error opening zip file or JAR manifest missing : C:\Users\DELL\.IntelliJIdea2019.3\system\groovyHotSwap\gragent.jarError occurred during initialization of VMagent library failed to init: instrumentDisconnected from server<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>在百度了许久之后，笔者试过修改项目启动端口号和JMX port、检查项目配置环境、删除上文的gragent.jar等方法，没有解决问题。最后在JetBrains官网找到类似问题后解决。</p><h3 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h3><p>将IDEA的以下两个插件禁用，重启IDEA后重新Debug启动项目，成功运行。</p><p><img src="https://blog-1306562150.cos.ap-guangzhou.myqcloud.com/problem/solution.jpg" alt="solution"></p>]]></content>
      
      
      <categories>
          
          <category> bugs </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Gson简单使用</title>
      <link href="/gson/gosn/"/>
      <url>/gson/gosn/</url>
      
        <content type="html"><![CDATA[<h1 id="Gson"><a href="#Gson" class="headerlink" title="Gson"></a>Gson</h1><h2 id="一、Gson简介"><a href="#一、Gson简介" class="headerlink" title="一、Gson简介"></a>一、Gson简介</h2><p>Java对象和Json之间的互转，一般用的比较多的类库是Jackson、Gson和FastJson。Gson比较稳定，质量高无BUG，下面记录一下Gson的学习使用。</p><p>基本概念：</p><p><strong>Serialization</strong>：序列化，使Java对象到Json字符串的过程。</p><p><strong>Deserialization</strong>：反序列化，字符串转换成Java对象。</p><p>Gradle引入依赖方式：</p><p>在build.gradle中的dependencies加入以下配置</p><pre class="line-numbers language-none"><code class="language-none">compile &#39;com.google.code.gson:gson:2.8.5&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Maven引入依赖方式：</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token comment">&lt;!-- https://mvnrepository.com/artifact/com.google.code.gson/gson --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.google.code.gson<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>gson<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.8.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二、Gson简单使用"><a href="#二、Gson简单使用" class="headerlink" title="二、Gson简单使用"></a>二、Gson简单使用</h2><h3 id="2-1-Gson的创建方式一"><a href="#2-1-Gson的创建方式一" class="headerlink" title="2.1 Gson的创建方式一"></a>2.1 Gson的创建方式一</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//直接new Gson();</span><span class="token class-name">Gson</span> gson <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Gson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//Gson的两个基本方法</span><span class="token comment">//gson.toJson();     将bean对象转换为json</span><span class="token comment">//gson.fromJson();   将json转换为bean对象</span><span class="token comment">//创建User对象进行测试</span><span class="token class-name">User</span> user1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string">"张三"</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">User</span> user2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string">"李四"</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">User</span> user3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token string">"王五"</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">></span></span> userList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>userList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>user1<span class="token punctuation">)</span><span class="token punctuation">;</span>userList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>user2<span class="token punctuation">)</span><span class="token punctuation">;</span>userList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>user3<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//toJson 将bean对象转换为json</span><span class="token class-name">String</span> jsonStr <span class="token operator">=</span> gson<span class="token punctuation">.</span><span class="token function">toJson</span><span class="token punctuation">(</span>user1<span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment">//jsonStr = &#123;"userName":"张三","age":20&#125;</span><span class="token comment">//fromJson 将json转换为bean对象</span><span class="token class-name">User</span> user <span class="token operator">=</span> gson<span class="token punctuation">.</span><span class="token function">fromJson</span><span class="token punctuation">(</span>jsonStr<span class="token punctuation">,</span> <span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//user = User&#123;userName='张三', age=20&#125;</span><span class="token comment">//序列化list</span><span class="token class-name">String</span> jsonList <span class="token operator">=</span> gson<span class="token punctuation">.</span><span class="token function">toJson</span><span class="token punctuation">(</span>userList<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/** jsonList = [  &#123;"userName":"张三","age":20&#125;,      &#123;"userName":"李四","age":32&#125;,      &#123;"userName":"王五","age":19&#125;   ]*/</span><span class="token comment">//反序列化list</span><span class="token class-name">Type</span> type <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TypeToken</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">></span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">></span></span> userList1 <span class="token operator">=</span> gson<span class="token punctuation">.</span><span class="token function">fromJson</span><span class="token punctuation">(</span>jsonList<span class="token punctuation">,</span> type<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/** userList1 = [   User&#123;userName='张三', age=20&#125;,   User&#123;userName='李四', age=32&#125;,    User&#123;userName='王五', age=19&#125;   ]*/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-2-Gson的创建方式二"><a href="#2-2-Gson的创建方式二" class="headerlink" title="2.2 Gson的创建方式二"></a>2.2 Gson的创建方式二</h3><p>使用GsonBuilder</p><p>在方式一中，使用new Gson()会创建一个带有配置选项的Gson实例，如果不想使用默认配置，那么就可以使用GsonBuilder。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Gson</span> gson <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GsonBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">serializeNulls</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>首先创建GsonBuilder,然后调用GsonBuilder提供的各种配置方法进行配置，最后调用GsonBuilder的create方法，将基于当前的配置创建一个Gson实例。</p><p>GsonBuilder的一些配置</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token class-name">Gson</span> gson <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GsonBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">serializeNulls</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//当字段值为空或null时，依然对该字段进行转换</span>    <span class="token punctuation">.</span><span class="token function">excludeFieldsWithoutExposeAnnotation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//不对没有用@Expose注解的属性进行操作</span>    <span class="token punctuation">.</span><span class="token function">setDateFormat</span><span class="token punctuation">(</span><span class="token string">"yyyy-MM-dd HH:mm:ss:SSS"</span><span class="token punctuation">)</span> <span class="token comment">//时间转化为特定格式</span>    <span class="token punctuation">.</span><span class="token function">setPrettyPrinting</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//对结果进行格式化，增加换行</span>    <span class="token punctuation">.</span><span class="token function">disableHtmlEscaping</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//防止特殊字符出现乱码</span>    <span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//创建gson实例</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Gson </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Gson </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gradle</title>
      <link href="/uncategorized/gradle/"/>
      <url>/uncategorized/gradle/</url>
      
        <content type="html"><![CDATA[<h1 id="Gradle"><a href="#Gradle" class="headerlink" title="Gradle"></a>Gradle</h1><h2 id="一、Gradle简介"><a href="#一、Gradle简介" class="headerlink" title="一、Gradle简介"></a>一、Gradle简介</h2><p>Gradle是源于Apache Ant和Apache  Maven概念的项目自动化构建开源工具，它使用一种基于Groovy的特定领域语言(DSL)来声明项目设置，抛弃了基于XML的各种繁琐配置面向Java应用为主。当前其支持的语言暂时有Java、Groovy、Kotlin和Scala。</p><p>　　Gradle是一个基于JVM的构建工具，是一款通用灵活的构建工具，支持maven， Ivy仓库，支持传递性依赖管理，而不需要远程仓库或者是pom.xml和ivy.xml配置文件，基于Groovy，build脚本使用Groovy编写。</p><h2 id="二、Gradle下载安装"><a href="#二、Gradle下载安装" class="headerlink" title="二、Gradle下载安装"></a>二、Gradle下载安装</h2><p>​    <a href="https://gradle.org/">https://gradle.org/</a></p><p>​    提供了两种下载方式，Binary-only是只下载二进制源码，Complete, with docs and sources是下载源码和文档。如果有阅读文档的需求可以下载第二个，没有需要的下载Binary-only即可。</p><p>​    安装到所需目录即可。</p><h2 id="三、配置"><a href="#三、配置" class="headerlink" title="三、配置"></a>三、配置</h2><h3 id="3-1-配置环境变量"><a href="#3-1-配置环境变量" class="headerlink" title="3.1 配置环境变量"></a>3.1 配置环境变量</h3><p><strong>新建系统变量</strong></p><p>变量名：GRADLE_HOME，变量值：解压到的目录</p><p><strong>新建系统变量</strong></p><p>变量名：GRADLE_USER_HOME，变量值：自定义Gradle仓库目录或者Maven的仓库目录</p><p><strong>添加变量</strong></p><p>变量名：Path，变量值：%GRADLE_HOME%\bin;</p><h3 id="3-2-配置Gradle仓库源"><a href="#3-2-配置Gradle仓库源" class="headerlink" title="3.2 配置Gradle仓库源"></a>3.2 配置Gradle仓库源</h3><p>在Gradle安装目录下的 init.d 文件夹下，新建一个 init.gradle 文件，里面填写以下配置。</p><pre class="line-numbers language-none"><code class="language-none">allprojects &#123;    repositories &#123;        maven &#123; url &#39;file:&#x2F;&#x2F;&#x2F;G:&#x2F;maven_repository&#39;&#125;        mavenLocal()        maven &#123; name &quot;Alibaba&quot; ; url &quot;https:&#x2F;&#x2F;maven.aliyun.com&#x2F;repository&#x2F;public&quot; &#125;        maven &#123; name &quot;Bstek&quot; ; url &quot;http:&#x2F;&#x2F;nexus.bsdn.org&#x2F;content&#x2F;groups&#x2F;public&#x2F;&quot; &#125;        mavenCentral()    &#125;    buildscript &#123;         repositories &#123;             maven &#123; name &quot;Alibaba&quot; ; url &#39;https:&#x2F;&#x2F;maven.aliyun.com&#x2F;repository&#x2F;public&#39; &#125;            maven &#123; name &quot;Bstek&quot; ; url &#39;http:&#x2F;&#x2F;nexus.bsdn.org&#x2F;content&#x2F;groups&#x2F;public&#x2F;&#39; &#125;            maven &#123; name &quot;M2&quot; ; url &#39;https:&#x2F;&#x2F;plugins.gradle.org&#x2F;m2&#x2F;&#39; &#125;        &#125;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>repositories 中写的是获取 jar 包的顺序。先是本地的 Maven 仓库路径；</p><p>接着的 mavenLocal() 是获取 Maven本地仓库的路径，应该是和第一条一样，但是不冲突；</p><p>第三条和第四条是从国内和国外的网络上仓库获取；</p><p>最后的 mavenCentral()是从Apache提供的中央仓库获取 jar 包。</p><h2 id="四、IDEA配置Gradle"><a href="#四、IDEA配置Gradle" class="headerlink" title="四、IDEA配置Gradle"></a>四、IDEA配置Gradle</h2><p><img src="https://blog-1306562150.cos.ap-guangzhou.myqcloud.com/Gradle/1638517391989.png" alt="1638517391989"></p><p>需要配置的地方：</p><p>①file -&gt; setting</p><p>②file -&gt; Other settings -&gt; Setting for newProjects</p><h2 id="五、Gradle仓库配置"><a href="#五、Gradle仓库配置" class="headerlink" title="五、Gradle仓库配置"></a>五、Gradle仓库配置</h2><h3 id="5-1-本地仓库配置"><a href="#5-1-本地仓库配置" class="headerlink" title="5.1 本地仓库配置"></a>5.1 本地仓库配置</h3><p>配置环境变量GRADLE_USER_HOME，并指向你的一个本地目录，用来保存Gradle下载的依赖包。</p><p>变量名：GRADLE_USER_HOME</p><p>变量值：G:\Java\gradle.gradle</p><h3 id="5-2-远程仓库配置"><a href="#5-2-远程仓库配置" class="headerlink" title="5.2 远程仓库配置"></a>5.2 远程仓库配置</h3><p>一般Gradle、maven从中央仓库mavenCentral()(<a href="http://repo1.maven.org/maven2/">http://repo1.maven.org/maven2/</a>)下载依赖包，但是在国内下载速度较慢，我们只能使用国内的镜像。<br>所以每个Gradle构建的项目中，我们可以在build.gradle做如下配置</p><pre class="line-numbers language-gradle" data-language="gradle"><code class="language-gradle">repositories &#123;    maven &#123;        url &#39;http:&#x2F;&#x2F;maven.aliyun.com&#x2F;nexus&#x2F;content&#x2F;groups&#x2F;public&#x2F;&#39;    &#125;    mavenCentral()&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="六、Gradle-Wrapper使用"><a href="#六、Gradle-Wrapper使用" class="headerlink" title="六、Gradle Wrapper使用"></a>六、Gradle Wrapper使用</h2><p>对于所有Gradle项目来说，都推荐使用Gradle Wrapper，甚至应该将其当做创建代码库之后的第一件事来做。使用Gradle Wrapper有以下好处：<br> （1）不用安装Gradle也能运行Gradle<br> （2）所有人使用相同版本的Gradle</p><p>在build.gradle中加入以下配置：</p><pre class="line-numbers language-gradle" data-language="gradle"><code class="language-gradle">task wrapper(type: Wrapper) &#123;    gradleVersion &#x3D; &#39;4.6&#39;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>​      然后再运行gradle  wrapper,此时会生成gradlew、gradle.bat两个文件和gradle目录。这里的gradlew和gradle.bat是脚本文件，在使用gradle命令的地方替换为gradlew或gradle.bat，它们将自动下载指定版本的gradle，然后使用该版本进行项目构建。<br>​       请注意，这3个文件是要提交到代码库上的，当项目其他人拿到代码之后，由于gradlew和gradle.bat均在源代码中，他们本地即使没有安装gradle，也能通过./gradlew build命令进行项目构建。</p><p><strong>常用命令</strong></p><p>gradle -v  查看版本</p><p>gradle build  构建项目</p><p>gradle build -x test    排除test再构建</p>]]></content>
      
      
      
        <tags>
            
            <tag> Gradle </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
